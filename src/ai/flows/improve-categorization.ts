// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview This file defines a Genkit flow for improving product categorization based on user overrides.
 *
 * - improveCategorization - A function that handles the improvement of product categorization.
 * - ImproveCategorizationInput - The input type for the improveCategorization function.
 * - ImproveCategorizationOutput - The return type for the improveCategorization function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { getFirestore } from 'firebase-admin/firestore';
import { getApps, initializeApp, applicationDefault } from 'firebase-admin/app';

const ImproveCategorizationInputSchema = z.object({
  productName: z.string().describe('The name of the product.'),
  userSelectedCategory: z.string().describe('The category the user selected for the product.'),
});
export type ImproveCategorizationInput = z.infer<typeof ImproveCategorizationInputSchema>;

const ImproveCategorizationOutputSchema = z.object({
  success: z.boolean().describe('Indicates whether the categorization improvement was successful.'),
  message: z.string().describe('A message indicating the result of the categorization improvement.'),
});
export type ImproveCategorizationOutput = z.infer<typeof ImproveCategorizationOutputSchema>;

export async function improveCategorization(input: ImproveCategorizationInput): Promise<ImproveCategorizationOutput> {
  return improveCategorizationFlow(input);
}

const improveCategorizationFlow = ai.defineFlow(
  {
    name: 'improveCategorizationFlow',
    inputSchema: ImproveCategorizationInputSchema,
    outputSchema: ImproveCategorizationOutputSchema,
  },
  async input => {
    if (getApps().length === 0) {
      initializeApp({ credential: applicationDefault() });
    }
    const db = getFirestore();
    try {
      const docRef = db.collection('lists').doc('nuestra-despensa-compartida');
      const snap = await docRef.get();
      const data = snap.exists ? snap.data() || {} : {};
      const overrides = typeof data.categoryOverrides === 'object' ? data.categoryOverrides : {};
      overrides[input.productName.toLowerCase()] = input.userSelectedCategory;
      await docRef.set({ categoryOverrides: overrides }, { merge: true });
      return {
        success: true,
        message: `Categorization for ${input.productName} updated to ${input.userSelectedCategory}.`,
      };
    } catch (e) {
      return { success: false, message: String(e) };
    }
  }
);
